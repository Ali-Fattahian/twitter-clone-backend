{"version":3,"file":"static/js/503.0a121fbd.chunk.js","mappings":"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","sources":["components/FollowButton.js","components/LikeButton.js","components/Modal/ErrorMessage.js","components/Reply/AddReply.js","components/SaveTweet.js","components/Tweet/Tweet.js","components/Tweet/TweetList.js","components/UnlikeButton.js","webpack://frontend/./src/components/YouMightLike.module.css?aa50","components/SuggestedUser.js","components/YouMightLike.js","webpack://frontend/./src/pages/Pages.module.css?6bb4","pages/Explore.js","webpack://frontend/./src/components/Reply/Reply.module.css?fbc2"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../axiosInstance\";\n\nconst FollowButton = (props) => {\n  const navigate = useNavigate();\n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n\n  const followHandler = async (e) => {\n    e.stopPropagation()\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    } else {\n      const response = await axiosInstance.post(\n        \"follow-request/\",\n        {\n          user: props.user.id\n        }\n      );\n      if (response.status === 201) {\n        props.setFollow(true)\n        props.setFollowWasSuc(response.data.id) // To make a refresh on suggested users list\n      };\n    }\n  };\n\n  return (\n    <button\n      className=\"btn\"\n      type=\"submit\"\n      style={{ backgroundColor: props.backgroundColor, color: props.color }}\n      onClick={followHandler}\n    >\n      Follow\n    </button>\n  );\n};\n\nexport default FollowButton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../axiosInstance\";\n\nconst LikeButton = (props) => {\n  const navigate = useNavigate()  \n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n\n  const likeHandler = async (e) => {\n    e.stopPropagation()\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    } else {\n      const response = await axiosInstance.post(`like-tweet/${props.tweetId}`);\n      if (response.status === 201) {\n        props.setFakeLikeNumber(prevNum => prevNum +1)\n        props.setLikeClicked(true)\n      }\n    }\n  };\n  return (\n    <div>\n      <i className=\"fa fa-heart-o\" onClick={likeHandler} />\n      <p>{props.likes}</p>\n    </div>\n  );\n};\n\nexport default LikeButton;\n","import * as ReactDOM from \"react-dom\";\n\nconst ErrorMessage = (props) => {\n  return (\n    <div className=\"error_message__container\">\n      <div className=\"error-message__modal\">\n        {props.errorMessage}\n        <div>\n          <button className=\"btn\" onClick={props.onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.createPortal(ErrorMessage, document.getElementById(\"root\"));\n\nexport default ErrorMessage;\n","import React, { useContext, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Reply.module.css\";\nimport Profile from \"../Tweet/default_profile.png\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport axiosInstance from \"../../axiosInstance\";\n\nconst AddReply = (props) => {\n  const replyContent = useRef(\"\");\n  const { userData } = useContext(AuthContext)\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!!userData) {\n      if (replyContent.current.value.trim().length > 0) {\n        sendData();\n      }\n    } else {\n      props.onError(\n        <p>\n          Please <Link to=\"/login\">login</Link> before adding a tweet.\n        </p>\n      );\n    }\n  };\n\n  async function sendData() {\n    const response = await axiosInstance.post(`tweets/${props.tweetId}/reply`, {\n      text: replyContent.current.value,\n    });\n\n    if (response.status === 201) {\n      props.setNewReply(response.data.id);\n      replyContent.current.value = \"\";\n      return;\n    }\n  }\n\n  return (\n    <div className={classes[\"reply-section\"]}>\n      <div className={classes[\"close-reply__section\"]}>\n        <i\n          className=\"fa fa-times\"\n          aria-hidden=\"true\"\n          onClick={() => props.hideReply()}\n          style={{ cursor: \"pointer\" }}\n        ></i>\n      </div>\n      <div className={classes[\"user__info\"]}>\n        <div className={classes[\"user-info__left\"]}>\n          <img src={props.picture} alt=\"Profile\" />\n        </div>\n        <div className={classes[\"user-info__right\"]}>\n          <div className={classes[\"user__names\"]}>\n            <p id={classes[\"fullname\"]}>\n              {`${props.firstname} ${props.lastname}`}\n            </p>\n            <p id={classes[\"username\"]}>{props.username}</p>\n            <p>·</p>\n            <p id={classes[\"time-created\"]}>{props.timeCreated}</p>\n          </div>\n          <div className={classes[\"tweet-content\"]}>{props.content}</div>\n        </div>\n      </div>\n      <form\n        id=\"add-reply\"\n        className={classes[\"add-reply__form\"]}\n        onSubmit={formSubmitHandler}\n      >\n        <div className={classes[\"add-reply__upper\"]}>\n          {!!userData ? (\n            <img\n              className={classes[\"add-reply__image\"]}\n              src={userData.picture}\n              alt=\"Default profile\"\n            />\n          ) : (\n            <img\n              className={classes[\"add-reply__image\"]}\n              src={Profile}\n              alt=\"Default profile\"\n            />\n          )}\n          <textarea\n            className={classes[\"add-reply__input\"]}\n            placeholder=\"Tweet your reply\"\n            ref={replyContent}\n            name=\"reply\"\n          />\n        </div>\n        <div className={classes[\"add-reply__lower\"]}>\n          <div className={classes[\"btn-container\"]}>\n            <button className=\"btn\" type=\"submit\">\n              Reply\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddReply;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../axiosInstance\";\n\nconst SaveTweet = (props) => {\n  const navigate = useNavigate();\n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n  const [isSaved, setIsSaved] = useState(null);\n  const [hasStarted, setHasStarted] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n  const [forceRefresh, setForceRefresh] = useState(null);\n\n  const checkForSave = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get(`bookmarks/${props.tweetId}/check`)\n      if (response.status === 200) setIsSaved(true)\n    } catch(err) {\n      console.clear()\n      if (err.response.status === 404)\n      setIsSaved(false)\n    }\n  }, [props.tweetId]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setHasStarted(true);\n      checkForSave();\n      setHasFinished(true);\n    } else {\n      setHasStarted(true);\n      setHasFinished(true);\n    }\n  }, [forceRefresh, checkForSave, isLoggedIn]);\n\n  const saveTweetHandler = async (e) => {\n    e.stopPropagation();\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n    const response = await axiosInstance.post(`tweets/${props.tweetId}/create-bookmark`);\n\n    if (response.status === 201) setForceRefresh(Date.now());\n  };\n\n  const removeFromSavedHandler = async (e) => {\n    e.stopPropagation();\n    const response = await axiosInstance.delete(`bookmarks/${props.tweetId}/delete`);\n\n    if (response.status === 204) {\n      setForceRefresh(Date.now()); // refresh the save component\n      if (props.isBookmarkPage) props.setNeedRefreshTweetList(Date.now()); // refresh the tweetlist component when a use deletes a saved tweet object if we are in book marks page\n    }\n  };\n\n  if (isSaved && hasStarted && hasFinished) {\n    return (\n      <i\n        className=\"fas fa-save fa-lg\"\n        aria-hidden=\"true\"\n        onClick={removeFromSavedHandler}\n      ></i>\n    ); // saved before\n  } else if (!isSaved && hasStarted && hasFinished) {\n    return (\n      <i\n        className=\"far fa-save fa-lg\"\n        aria-hidden=\"true\"\n        onClick={saveTweetHandler}\n      ></i>\n    ); // not saved before\n  }\n};\n\nexport default SaveTweet;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LikeButton from \"../LikeButton\";\nimport UnlikeButton from \"../UnlikeButton\";\nimport classes from \"./TweetStyle.module.css\";\nimport AddReply from \"../Reply/AddReply\";\nimport ErrorMessage from \"../Modal/ErrorMessage\";\nimport Overlay from \"../Modal/Overlay\";\nimport SaveTweet from \"../SaveTweet\";\nimport axiosInstance from \"../../axiosInstance\";\n\nconst Tweet = (props) => {\n  const userLink = `#/get-profile/${props.username}`;\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasStarted, setHasStarted] = useState(false);\n  const [likeOrDislike, setLikeOrDislike] = useState(null);\n  const [likeClicked, setLikeClicked] = useState(null);\n  const [fakeLikeNumber, setFakeLikeNumber] = useState(props.likes); // This is a fake number, when a user adds a like to a post, it is going to be in db, but instead refreshing the data from db, i set this fake number for number of likes, which is the same as the real one.\n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n  const [isAddReplyVisible, setIsAddReplyVisible] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [, setNewReply] = useState(null);\n\n  const showReply = () => {\n    setIsAddReplyVisible(true);\n    document.getElementById(\"add-reply__container\").classList.remove(\"hidden\");\n  };\n\n  const hideReply = () => {\n    setIsAddReplyVisible(false);\n    document.getElementById(\"add-reply__container\").classList.add(\"hidden\");\n  };\n\n  const showErrorMessageHandler = (message) => {\n    setErrorMessage(message);\n    setHasError(true);\n  };\n\n  const errorMessageCloseHandler = () => {\n    setErrorMessage(null);\n    setHasError(false);\n  };\n\n  const checkForLikeButton = async () => {\n    setHasStarted(true);\n    setIsLoading(true);\n    if (isLoggedIn) {\n      await axiosInstance\n        .get(`like/${props.tweetId}/check`)\n        .then((res) => {\n          if (res.status === 200) {\n            setLikeOrDislike(\n              <UnlikeButton\n                likeId={res.data.id}\n                likes={fakeLikeNumber}\n                setFakeLikeNumber={setFakeLikeNumber}\n                setLikeClicked={setLikeClicked}\n              />\n            );\n          } else {\n            throw res.status;\n          }\n        })\n        .catch(() => {\n          console.clear()\n          setLikeOrDislike(\n            <LikeButton\n              tweetId={props.tweetId}\n              likes={fakeLikeNumber}\n              setFakeLikeNumber={setFakeLikeNumber}\n              setLikeClicked={setLikeClicked}\n            />\n          );\n        });\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    checkForLikeButton();\n  }, [likeClicked]);\n\n  let likeButton;\n  if (isLoggedIn) {\n    likeButton = (\n      <div title=\"Like\">{!isLoading && hasStarted && likeOrDislike}</div>\n    );\n  } else {\n    likeButton = (\n      <div title=\"Like\">\n        <i className=\"fa fa-heart-o\" onClick={() => navigate(\"/login\")} />\n        <p>{props.likes}</p>\n      </div>\n    );\n  }\n\n  const tweetDetailNavigateHandler = () => {\n    navigate(`/tweets/${props.tweetId}`);\n  };\n\n  return (\n    <React.Fragment>\n      {hasError && (\n        <ErrorMessage\n          errorMessage={errorMessage}\n          onClose={errorMessageCloseHandler}\n        />\n      )}\n      <Overlay\n        isVisible={isAddReplyVisible}\n        onOverlayClick={() => hideReply()}\n      />\n      <section\n        id=\"add-reply__container\"\n        className=\"add-reply__container hidden\"\n      >\n        <AddReply\n          onError={showErrorMessageHandler}\n          tweetId={props.tweetId}\n          username={props.user}\n          firstname={props.firstname}\n          lastname={props.lastname}\n          timeCreated={props.timeCreated}\n          picture={props.picture}\n          content={props.content}\n          hideReply={hideReply}\n          setNewReply={setNewReply}\n        />\n      </section>\n      <div className={classes.tweet} onClick={tweetDetailNavigateHandler}>\n        <div className={classes[\"tweet-left\"]}>\n          <img src={props.picture} alt=\"Profile\" style={{objectFit: 'cover'}} />\n        </div>\n        <div className={classes[\"tweet-right\"]}>\n          <div className={classes[\"tweet-right__top\"]}>\n            <div className={classes[\"user-info\"]}>\n              <a id={classes[\"user-name\"]} href={userLink}>\n                {props.firstname} {props.lastname}\n              </a>\n              <a id={classes[\"username\"]} href={userLink}>\n                {props.username}\n              </a>\n              <a id={classes[\"tweet-dot\"]} href={userLink}>\n                ·\n              </a>\n              <a id={classes[\"tweet__time-created\"]} href={userLink}>\n                {props.timeCreated}\n              </a>\n            </div>\n            {/* <div className={classes.more}>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div> */}\n          </div>\n          <div className={classes[\"tweet-content\"]}>{props.content}</div>\n          <div className={classes[\"tweet-right__bottom\"]}>\n            <div\n              title=\"Reply\"\n              onClick={(e) => {\n                e.stopPropagation();\n                showReply();\n              }}\n            >\n              <i className=\"fa fa-reply\" />\n              <p>{props.reply}</p>\n            </div>\n            {likeButton}\n            <div title=\"Save\">\n              <SaveTweet\n                tweetId={props.tweetId}\n                setHasError={setHasError}\n                setErrorMessage={setErrorMessage}\n                setNeedRefreshTweetList={props.setNeedRefresh}\n                isBookmarkPage={props.isBookmarkPage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Tweet;\n","import classes from \"./TweetStyle.module.css\";\nimport Tweet from \"./Tweet\";\nimport dateTimeGenerator from \"../../utils\";\n\nconst TweetList = (props) => {\n  if (!props.tweetList)\n    return (\n      <section className={classes[\"no-tweet\"]}>\n        <p>No tweet was found, Please check your internet connection.</p>\n      </section>\n    );\n  return (\n    <section id=\"tweet-list\" className={classes[\"tweet-list\"]}>\n      {props.tweetList.length!==0 ? props.tweetList.map((tweet) => (\n        <Tweet\n          tweetId={tweet.id}\n          key={tweet.id}\n          firstname={tweet.user.firstname}\n          lastname={tweet.user.lastname}\n          username={tweet.user.username}\n          picture={tweet.user.picture}\n          timeCreated={dateTimeGenerator(\n            tweet.date_created.created_ago,\n            tweet.date_created.created\n          )}\n          content={tweet.content}\n          reply={tweet.tweetReply}\n          retweet={tweet.tweetRetweets}\n          likes={tweet.likes.length}\n          isBookmarkPage={props.isBookmarkPage}\n          setNeedRefresh={props.setNeedRefresh}\n        />\n      )) : <p className=\"p-info--center\">No posts yet!</p>}\n    </section>\n  );\n};\n\nexport default TweetList;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../axiosInstance\";\n\nconst UnlikeButton = (props) => {\n  const navigate = useNavigate()  \n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n\n  const likeHandler = async (e) => {\n    e.stopPropagation()\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    } else {\n      const response = await axiosInstance.delete(`remove-like/${props.likeId}`);\n      if (response.status === 204) {\n        props.setFakeLikeNumber(prevNum => prevNum -1)\n        props.setLikeClicked(false)\n      }\n    }\n  };\n  return (\n    <div>\n      <i className=\"fa fa-heart\" style={{color: 'red'}} onClick={likeHandler} />\n      <p>{props.likes}</p>\n    </div>\n  );\n};\n\nexport default UnlikeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"you-might-like\":\"YouMightLike_you-might-like__EVWFg\",\"suggested-users\":\"YouMightLike_suggested-users__84w7p\",\"suggested-user\":\"YouMightLike_suggested-user__bn1Rr\",\"suggested-user__left\":\"YouMightLike_suggested-user__left__0dHxW\",\"fullname\":\"YouMightLike_fullname__koNmx\",\"username\":\"YouMightLike_username__ZbD+j\"};","import ProfilePicture from \"./Tweet/default_profile.png\";\nimport FollowButton from \"./FollowButton\";\nimport classes from \"./YouMightLike.module.css\";\n\nconst SuggestedUser = (props) => {\n  return (\n    <div className={classes[\"suggested-user\"]}>\n      <div className={classes[\"suggested-user__left\"]}>\n        <img src={ProfilePicture} alt=\"profile\" />\n        <a className={classes[\"user-info\"]}  href={`#/get-profile/${props.user.username}`}>\n          <p\n            id={classes[\"fullname\"]}\n          >{`${props.user.firstname} ${props.user.lastname}`}</p>\n          <p id={classes[\"username\"]}>@{props.user.username}</p>\n        </a>\n      </div>\n      <div className={classes[\"suggested-user__right\"]}>\n        <FollowButton\n          color=\"#fff\"\n          backgroundColor=\"#000\"\n          user={props.user}\n          setFollowWasSuc={props.setFollowWasSuc}\n          setFollow={props.setFollow}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SuggestedUser;\n","import { useEffect, useState, useCallback, useContext } from \"react\";\nimport classes from \"./YouMightLike.module.css\";\nimport axios from \"axios\";\nimport SuggestedUser from \"./SuggestedUser\";\nimport { ServerContext } from \"../store/server-context\";\nimport axiosInstance from \"../axiosInstance\";\n\nconst YouMightLike = () => {\n  const [suggestedUsers, setSuggestedUsers] = useState([]);\n  const isLoggedIn = !!localStorage.getItem(\"authTokens\");\n  const [followWasSuc, setFollowWasSuc] = useState(null);\n  const [follow, setFollow] = useState(null) // Completely useless, i have to make it, pass it down to follow btn because i did it in profile page and it is expected in follow btn component\n  const { serverURL } = useContext(ServerContext)\n\n  const getSuggestedUsers = useCallback(async () => {\n    let response;\n    if (!isLoggedIn) {\n      response = await axios.get(`${serverURL}suggested-users`);\n    } else {\n      response = await axiosInstance.get(\n        `${serverURL}suggested-users`\n      );\n    }\n    if (response.status === 200) setSuggestedUsers(response.data);\n  }, [isLoggedIn, serverURL]);\n\n  useEffect(() => {\n    getSuggestedUsers()\n  }, [followWasSuc])\n\n  return (\n    <section className={classes[\"you-might-like\"]}>\n      <p>Who to follow</p>\n      <div className={classes[\"suggested-users\"]}>\n        {suggestedUsers.length > 0 && suggestedUsers.map((user) => (\n          <SuggestedUser user={user} key={user.id} setFollowWasSuc={setFollowWasSuc} setFollow={setFollow} />\n        ))}\n        {suggestedUsers.length === 0 && <p style={{color:'black', textAlign:'center', fontWeight: 'bold'}}>No Suggested users</p>}\n      </div>\n    </section>\n  );\n};\n\nexport default YouMightLike;\n","// extracted by mini-css-extract-plugin\nexport default {\"search-bar__container\":\"Pages_search-bar__container__K-CPw\",\"extra-links\":\"Pages_extra-links__pv9HR\"};","import React, { useEffect, useState, useContext } from \"react\";\nimport classes from \"./Pages.module.css\";\n\nimport YouMightLike from \"../components/YouMightLike\";\nimport Searchbar from \"../components/Searchbar\";\nimport TweetList from \"../components/Tweet/TweetList\";\nimport Overlay from \"../components/Modal/Overlay\";\nimport axios from \"axios\";\nimport { ServerContext } from \"../store/server-context\";\n\nconst Explore = (props) => {\n  const [tweetList, setTweetList] = useState([]);\n  const { serverURL } = useContext(ServerContext)\n\n  const getTweets = async () => {\n    const response = await axios.get(\n      `${serverURL}explore`\n    );\n\n    if (response.status === 200) setTweetList(response.data);\n  } \n\n  useEffect(() => {\n    getTweets();\n  }, []);\n\n  const onOverlayClick = () => {\n    props.onMenuClick()\n  }\n\n  return (\n    <React.Fragment>\n      {!!props.isMenuOpen ? <Overlay onOverlayClick={onOverlayClick} isVisible={true} /> : <Overlay onOverlayClick={onOverlayClick} isVisible={false} />}\n      <div className=\"main__middle-side\" id=\"explore-middle\">\n        <div className={classes[\"search-bar__container\"]}>\n        {/* <img src={ProfilePicture} alt=\"Profile\" onClick={props.onMenuClick} /> */}\n          <div className=\"ham-menu__btn\" onClick={props.onMenuClick}>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <Searchbar />\n        </div>\n        {tweetList.length === 0 ? (\n          <p className=\"p-info--center\">No tweets from the last 24 hours.</p>\n        ) : (\n          <TweetList tweetList={tweetList} isBookmarkPage={false} />\n        )}\n      </div>\n      <div className=\"main__right-side\">\n        <YouMightLike />\n        <div className={classes[\"extra-links\"]}>\n          <p>© 2022 Twitter, Inc.</p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Explore;\n","// extracted by mini-css-extract-plugin\nexport default {\"reply-section\":\"Reply_reply-section__BbnCc\",\"user__info\":\"Reply_user__info__UitVu\",\"user-info__left\":\"Reply_user-info__left__qR7yp\",\"user-info__right\":\"Reply_user-info__right__M3A23\",\"user__names\":\"Reply_user__names__6lVy1\",\"link--underline\":\"Reply_link--underline__IUIu6\",\"fullname\":\"Reply_fullname__lqRK6\",\"tweet-content\":\"Reply_tweet-content__GAg4T\",\"add-reply__form\":\"Reply_add-reply__form__Y1WR7\",\"add-reply__upper\":\"Reply_add-reply__upper__+Dp6b\",\"add-reply__lower\":\"Reply_add-reply__lower__yX4-S\",\"add-reply__image\":\"Reply_add-reply__image__MXGYn\",\"add-reply__input\":\"Reply_add-reply__input__kTyOX\",\"btn-container\":\"Reply_btn-container__+aEwk\",\"hidden\":\"Reply_hidden__Z2HP2\",\"reply-list\":\"Reply_reply-list__8iYMy\",\"reply\":\"Reply_reply__4J+VP\",\"reply-left\":\"Reply_reply-left__UpdBH\",\"reply-right\":\"Reply_reply-right__V+8vO\"};"],"names":["props","navigate","useNavigate","isLoggedIn","localStorage","getItem","followHandler","e","stopPropagation","axiosInstance","user","id","response","status","setFollow","setFollowWasSuc","data","className","type","style","backgroundColor","color","onClick","likeHandler","tweetId","setFakeLikeNumber","prevNum","setLikeClicked","likes","ErrorMessage","errorMessage","onClose","document","getElementById","replyContent","useRef","userData","useContext","AuthContext","text","current","value","setNewReply","classes","hideReply","cursor","src","picture","alt","firstname","lastname","username","timeCreated","content","onSubmit","preventDefault","trim","length","sendData","onError","to","Profile","placeholder","ref","name","useState","isSaved","setIsSaved","hasStarted","setHasStarted","hasFinished","setHasFinished","forceRefresh","setForceRefresh","checkForSave","useCallback","console","clear","useEffect","saveTweetHandler","Date","now","removeFromSavedHandler","isBookmarkPage","setNeedRefreshTweetList","likeButton","userLink","isLoading","setIsLoading","likeOrDislike","setLikeOrDislike","likeClicked","fakeLikeNumber","isAddReplyVisible","setIsAddReplyVisible","hasError","setHasError","setErrorMessage","classList","add","checkForLikeButton","then","res","UnlikeButton","likeId","catch","LikeButton","title","Overlay","isVisible","onOverlayClick","AddReply","message","objectFit","href","remove","reply","SaveTweet","setNeedRefresh","tweetList","map","tweet","dateTimeGenerator","date_created","created_ago","created","tweetReply","retweet","tweetRetweets","ProfilePicture","FollowButton","suggestedUsers","setSuggestedUsers","followWasSuc","serverURL","ServerContext","getSuggestedUsers","axios","textAlign","fontWeight","setTweetList","getTweets","onMenuClick","isMenuOpen","Searchbar","TweetList","YouMightLike"],"sourceRoot":""}