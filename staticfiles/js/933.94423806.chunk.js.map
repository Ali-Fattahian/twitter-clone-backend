{"version":3,"file":"static/js/933.94423806.chunk.js","mappings":"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","sources":["webpack://frontend/./src/pages/Auth/Signup.module.css?e8ab","pages/Auth/Signup.js","webpack://frontend/./src/pages/Auth/Login.module.css?5bbe"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message-container\":\"Signup_message-container__p8z5O\",\"message\":\"Signup_message__8LnhS\",\"form\":\"Signup_form__BL6Wl\",\"form-section\":\"Signup_form-section__f6TbP\",\"err-msg\":\"Signup_err-msg__ysThE\",\"user-name\":\"Signup_user-name__PeXpD\",\"error-message\":\"Signup_error-message__NmH3M\",\"already-have-account\":\"Signup_already-have-account__e8KWZ\",\"form-container\":\"Signup_form-container__o2uJV\"};","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport classes from \"./Signup.module.css\";\nimport loginClasses from \"./Login.module.css\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst Signup = () => {\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  let isEmailValid;\n  let isUsernameValid;\n\n  const SignUpSchema = Yup.object().shape({\n    firstname: Yup.string()\n      .max(50, \"Too long!\")\n      .required(\"First name is required\"),\n    lastname: Yup.string()\n      .max(50, \"Too long!\")\n      .required(\"Last name is required\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password should be at least 8 characters\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Email is required\")\n      .test(\n        \"checkDupEmail\",\n        \"A user with this email already exists\",\n        async (value) => {\n          await fetch(\"http://127.0.0.1:8000/api/check-email/\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              email: value,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              isEmailValid = data !== true;\n            });\n          return isEmailValid;\n        }\n      ),\n    username: Yup.string()\n      .required(\"Username is required\")\n      .test(\n        \"checkDupUsername\",\n        \"A user with this username already exists\",\n        async (value) => {\n          await fetch(\"http://127.0.0.1:8000/api/check-username/\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              username: value,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              isUsernameValid = data !== true;\n            });\n          return isUsernameValid;\n        }\n      ),\n  });\n\n  const formSubmitHandler = (values, { resetForm }) => {\n    const sendData = async () => {\n      await axios.post(\"http://127.0.0.1:8000/api/\", {\n        email: values.email,\n        username: values.username,\n        password: values.password,\n        firstname: values.firstname,\n        lastname: values.lastname,\n      });\n    };\n\n    sendData();\n    resetForm();\n    setMessage(\n      \"Your account was created, we've sent a confirmation email to you, make sure to check spam folder if you can't find it.\\nThe link will expire in 10 minutes.\"\n    );\n  };\n\n  return (\n    <section className={loginClasses[\"page-container\"]}>\n      <div className={loginClasses[\"form-container\"]}>\n        <Formik\n          initialValues={{\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\",\n            password: \"\",\n            username: \"\",\n          }}\n          onSubmit={formSubmitHandler}\n          validationSchema={SignUpSchema}\n        >\n          {() => (\n            <Form className={classes.form}>\n              <div className={classes[\"form-section\"]}>\n                <i\n                  style={{ cursor: \"pointer\", color: \"#000\" }}\n                  className=\"fa fa-chevron-left\"\n                  onClick={() => navigate(-1)}\n                ></i>\n              </div>\n              <div\n                className={classes[\"form-section\"]}\n                id={classes[\"user-name\"]}\n              >\n                <Field\n                  type=\"text\"\n                  name=\"firstname\"\n                  placeholder=\"First name...\"\n                />\n                <ErrorMessage\n                  name=\"firstname\"\n                  className={classes[\"err-msg\"]}\n                  component=\"div\"\n                />\n                <Field type=\"text\" name=\"lastname\" placeholder=\"Last name...\" />\n                <ErrorMessage\n                  name=\"lastname\"\n                  className={classes[\"err-msg\"]}\n                  component=\"div\"\n                />\n              </div>\n              <div className={classes[\"form-section\"]}>\n                <Field type=\"email\" name=\"email\" placeholder=\"Email...\" />\n                <ErrorMessage\n                  name=\"email\"\n                  className={classes[\"err-msg\"]}\n                  component=\"div\"\n                />\n              </div>\n              <div className={classes[\"form-section\"]}>\n                <Field type=\"text\" name=\"username\" placeholder=\"Username...\" />\n                <ErrorMessage\n                  name=\"username\"\n                  className={classes[\"err-msg\"]}\n                  component=\"div\"\n                />\n              </div>\n              <div className={classes[\"form-section\"]}>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password...\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  className={classes[\"err-msg\"]}\n                  component=\"div\"\n                />\n              </div>\n              <div className={classes[\"form-section\"]}>\n                <button\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={!SignUpSchema.isValid}\n                >\n                  Next\n                </button>\n                {message && (\n                  <p\n                    style={{\n                      marginTop: \"5px\",\n                      color: \"green\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {message}\n                  </p>\n                )}\n              </div>\n              <div className={classes[\"form-section\"]}>\n                <p id={classes[\"already-have-account\"]}>\n                  Already have an account? <Link to=\"/login\">Sign in</Link>\n                </p>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default Signup;\n","// extracted by mini-css-extract-plugin\nexport default {\"page-container\":\"Login_page-container__eYcBF\",\"form-container\":\"Login_form-container__b9rE2\",\"form\":\"Login_form__YrVNa\",\"not-have-account\":\"Login_not-have-account__HcHLE\"};"],"names":["isEmailValid","isUsernameValid","navigate","useNavigate","useState","message","setMessage","SignUpSchema","Yup","shape","firstname","max","required","lastname","password","min","email","test","value","fetch","method","body","JSON","stringify","headers","then","res","json","data","username","className","loginClasses","initialValues","onSubmit","values","resetForm","sendData","axios","validationSchema","classes","style","cursor","color","onClick","id","type","name","placeholder","component","disabled","isValid","marginTop","textAlign","to"],"sourceRoot":""}